local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
local cam = workspace.CurrentCamera

local hum, hrp, char
local isHiding = false
local lastcf = nil
local savedCamCF = nil
local hidingLoop = nil

local function onCharacterAdded(character)
	char = character
	hum = character:WaitForChild("Humanoid")
	hrp = character:WaitForChild("HumanoidRootPart")

	hum.Died:Connect(function()
		isHiding = false
		lastcf = nil
		if hidingLoop then
			hidingLoop:Disconnect()
			hidingLoop = nil
		end
	end)

	cam.CameraSubject = hum
	cam.CameraType = Enum.CameraType.Custom
end

if plr.Character then
	onCharacterAdded(plr.Character)
end
plr.CharacterAdded:Connect(onCharacterAdded)

local function startHiding()
	if isHiding or not hrp then return end
	isHiding = true
	lastcf = hrp.CFrame
	savedCamCF = cam.CFrame
	cam.CameraType = Enum.CameraType.Scriptable
	cam.CFrame = savedCamCF

	hidingLoop = RunService.Heartbeat:Connect(function()
		if not hrp or not isHiding then return end
		hrp.CFrame = CFrame.new(0, -300, 0)
		hrp.AssemblyLinearVelocity = Vector3.zero
		hrp.AssemblyAngularVelocity = Vector3.zero
	end)
end

local function stopHiding()
	if not isHiding or not hrp then return end
	isHiding = false

	if hidingLoop then
		hidingLoop:Disconnect()
		hidingLoop = nil
	end

	hrp.CFrame = lastcf
	cam.CameraType = Enum.CameraType.Custom
	cam.CameraSubject = hum
end

UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.E then
		startHiding()
	end
end)

UserInputService.InputEnded:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.E then
		stopHiding()
	end
end)
